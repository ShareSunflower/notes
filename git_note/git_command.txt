Git 分布式版本控制系统
GitHub网站为开源项目提供免费Git存储

Git初始化
  1. Git的全局配置
    git config --global user.name "Scott Chacon"
    git config --global user.name "Scott Chacon"
    cat ~/.gitconfig #全局配置文件
    git config --global <配置名称> <配置的值>
  2. 局部配置
    git config user.name "Scott Chacon"
    git config user.name "Scott Chacon"
    在当前项目创建.git/config，从而使用针对当前项目的配置。

获得一个Git仓库
  1. Clone一个仓库
    git clone http://git.shiyanlou.com/shiyanlou/gitproject
  2. 初始化一个新的仓库
    mkdir project
    cd project
    git init

git的基本流程如下：
  1. 创建或修改文件
  2. 使用git add命令添加新创建或修改的文件到本地的缓存区（Index）
  3. 使用git commit命令提交到本地代码库
  4. （可选，有的时候并没有可以同步的远端代码库）使用git push命令将本地代码库同步到远端代码库
  5. exanple
    touch file1 file2 file3
    echo "testcontent1" >> file1
    echo "testcontent2" >> file2
    echo "testcontent3" >> file3
    git status
    git add file1 file2 file3
    git diff --cached
    git commit -m "add 3 files"
    git push origin master

分支与合并
  git branch experimental
  git branch
  git checkout experimental
  git merge  -m 'merge experimental branch' experimental
  git branch -d experimental
  git reset --hard HEAD^

Git日志
  git log
  git log --stat
  git log --pretty=oneline
  git log --graph --pretty=oneline
  git log --pretty=format:'%h : %s' --topo-order --graph

总结
  git config：配置相关信息
  git clone：复制仓库
  git init：初始化仓库
  git add：添加更新内容到索引中
  git diff：比较内容
  git status：获取当前项目状况
  git commit：提交
  git branch：分支相关
  git checkout：切换分支
  git merge：合并分支
  git reset：恢复版本
  git log：查看日志

比较
  比较提交
    git diff
    git diff --cached
  比较分支
    git diff master test

分布式的工作流程
  git pull /tmp/myrepo master
  git push ssh://yourserver.com/~you/proj.git master:master
  git tag stable-1 8c315325
